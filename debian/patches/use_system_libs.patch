--- /dev/null
+++ b/cmake/find_libsparsehash.cmake
@@ -0,0 +1,4 @@
+find_path(SPARSEHASH_INCLUDE_DIR sparsehash/type_traits.h)
+include_directories (${SPARSEHASH_INCLUDE_DIR})
+
+message(STATUS "Using sparsehash: ${SPARSEHASH_INCLUDE_DIR}")
--- a/copy_headers.sh
+++ b/copy_headers.sh
@@ -27,19 +27,10 @@ for src_file in $(clang -M -xc++ -std=gn
 	"$SOURCE_PATH/dbms/include/DB/Interpreters/SpecializedAggregator.h" |
 	tr -d '\\' |
 	grep -v '.o:' |
-	sed -r -e 's/^.+\.cpp / /');
+	sed -r -e 's/^.+\.cpp / /'|tr ' ' '\n'|grep -v '^/usr' |grep -v ^$);
 do
 	# Для совместимости со случаем сборки ClickHouse из репозитория Метрики, удаляем префикс ClickHouse из результирующих путей.
 	dst_file=$(echo $src_file | sed -r -e 's/^ClickHouse\///');
 	mkdir -p "$DST/$(echo $dst_file | sed -r -e 's/\/[^/]*$/\//')";
 	cp "$src_file" "$DST/$dst_file";
 done
-
-
-# Копируем больше заголовочных файлов с интринсиками, так как на серверах, куда будут устанавливаться
-#  заголовочные файлы, будет использоваться опция -march=native.
-
-for i in $(ls -1 $(clang -v -xc++ - <<<'' 2>&1 | grep '^ /' | grep 'include' | grep '/lib/clang/')/*.h | grep -vE 'arm|altivec|Intrin');
-do
-	cp "$i" "$DST/$i";
-done
--- a/dbms/src/Interpreters/CMakeLists.txt
+++ b/dbms/src/Interpreters/CMakeLists.txt
@@ -6,7 +6,7 @@ else ()
 endif ()
 
 if (INTERNAL_COMPILER_SAME)
-	set (INTERNAL_COMPILER_EXECUTABLE "${CMAKE_CXX_COMPILER}" CACHE STRING "")
+	set (INTERNAL_COMPILER_EXECUTABLE "/usr/bin/clang" CACHE STRING "")
 else ()
 	set (INTERNAL_COMPILER_EXECUTABLE "${PATH_SHARE}/clickhouse/bin/clang" CACHE STRING "")
 endif ()
--- a/dbms/tests/queries/0_stateless/00281_gcc_clang_sizeof_packed.reference
+++ /dev/null
@@ -1,2 +0,0 @@
-1	Hello
-2	Hello
--- a/dbms/tests/queries/0_stateless/00281_gcc_clang_sizeof_packed.sql
+++ /dev/null
@@ -1,2 +0,0 @@
-SET compile = 1, min_count_to_compile = 0, max_threads = 1;
-SELECT arrayJoin([1, 2, 1]) AS UserID, argMax('Hello', today()) AS res GROUP BY UserID;
