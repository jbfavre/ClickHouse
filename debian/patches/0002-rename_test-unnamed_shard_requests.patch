Description: Fix misnamed tests
 Some tests don't work when running a standalone clickhouse server
 They should be skipped because we use the --no-shard option
 But need to be renamed
Author: Jean Baptiste Favre <debian@jbfavre.org>
Origin: other
Last-Update: 2017-09-28
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/dbms/tests/queries/0_stateless/00491_distributed_and_aliases_in_where_having.reference
+++ /dev/null
@@ -1 +0,0 @@
-0
--- /dev/null
+++ b/dbms/tests/queries/0_stateless/00491_zookeeper_distributed_and_aliases_in_where_having.reference
@@ -0,0 +1 @@
+0
--- a/dbms/tests/queries/0_stateless/00491_distributed_and_aliases_in_where_having.sql
+++ /dev/null
@@ -1 +0,0 @@
-SELECT dummy FROM (SELECT dummy, NOT dummy AS x FROM remote('127.0.0.{1,2}', system.one) GROUP BY dummy HAVING x);
--- /dev/null
+++ b/dbms/tests/queries/0_stateless/00491_zookeeper_distributed_and_aliases_in_where_having.sql
@@ -0,0 +1 @@
+SELECT dummy FROM (SELECT dummy, NOT dummy AS x FROM remote('127.0.0.{1,2}', system.one) GROUP BY dummy HAVING x);
--- a/dbms/tests/queries/0_stateless/00113_group_array.reference
+++ /dev/null
@@ -1,90 +0,0 @@
-0	100
-1	100
-2	100
-3	100
-4	100
-5	100
-6	100
-7	100
-8	100
-9	100
-
-0	1000000
-
-21
-41
-1000000	500000500000	1000000
-1000000	500000500000	1000000
-1000000	500000500000	1000000	500000500000
-1000000	500000500000	1000000	500000500000
-2000000	1000001000000	1000000
-2000000	1000001000000	1000000
-2000000	1000001000000	1000000	1000001000000
-
-512	1	512	512
-1024	1	1024	1024
-2048	1	1024	2048
-4096	1	1024	4096
-8192	1	1024	8192
-16384	1	1024	16384
-32768	1	1024	32768
-65536	1	1024	65536
-131072	1	1024	65536
-262144	1	1024	65536
-524288	1	1024	65536
-512	1	512	512
-1024	1	1024	1024
-2048	1	1024	2048
-4096	1	1024	4096
-8192	1	1024	8192
-16384	1	1024	16384
-32768	1	1024	32768
-65536	1	1024	65536
-131072	1	1024	65536
-262144	1	1024	65536
-524288	1	1024	65536
-512	1	512	512
-1024	1	1024	1024
-2048	1	1024	2048
-4096	1	1024	4096
-8192	1	1024	8192
-16384	1	1024	16384
-32768	1	1024	32768
-65536	1	1024	65536
-131072	1	1024	65536
-262144	1	1024	65536
-524288	1	1024	65536
-
-512	1	1024	1024
-1024	1	1500	2048
-2048	1	1500	4096
-4096	1	1500	8192
-8192	1	1500	16384
-16384	1	1500	32768
-32768	1	1500	65536
-65536	1	1500	70000
-131072	1	1500	70000
-262144	1	1500	70000
-524288	1	1500	70000
-512	1	1024	1024
-1024	1	1500	2048
-2048	1	1500	4096
-4096	1	1500	8192
-8192	1	1500	16384
-16384	1	1500	32768
-32768	1	1500	65536
-65536	1	1500	70000
-131072	1	1500	70000
-262144	1	1500	70000
-524288	1	1500	70000
-512	1	1024	1024
-1024	1	1500	2048
-2048	1	1500	4096
-4096	1	1500	8192
-8192	1	1500	16384
-16384	1	1500	32768
-32768	1	1500	65536
-65536	1	1500	70000
-131072	1	1500	70000
-262144	1	1500	70000
-524288	1	1500	70000
--- a/dbms/tests/queries/0_stateless/00113_group_array.sql
+++ /dev/null
@@ -1,37 +0,0 @@
-SELECT intDiv(number, 100) AS k, length(groupArray(number)) FROM (SELECT * FROM system.numbers LIMIT 1000000) GROUP BY k WITH TOTALS ORDER BY k LIMIT 10;
-
-SELECT '';
-SELECT length(toString(groupArrayState(toDate(number)))) FROM (SELECT * FROM system.numbers LIMIT 10);
-SELECT length(toString(groupArrayState(toDateTime(number)))) FROM (SELECT * FROM system.numbers LIMIT 10);
-
-DROP TABLE IF EXISTS test.numbers_mt;
-CREATE TABLE test.numbers_mt (number UInt64) ENGINE = Log;
-INSERT INTO test.numbers_mt SELECT * FROM system.numbers LIMIT 1, 1000000;
-
-SELECT count(), sum(ns), max(ns) FROM (SELECT intDiv(number, 100) AS k, groupArray(number) AS ns FROM test.numbers_mt GROUP BY k) ARRAY JOIN ns;
-SELECT count(), sum(toUInt64(ns)), max(toUInt64(ns)) FROM (SELECT intDiv(number, 100) AS k, groupArray(toString(number)) AS ns FROM test.numbers_mt GROUP BY k) ARRAY JOIN ns;
-SELECT count(), sum(toUInt64(ns[1])), max(toUInt64(ns[1])), sum(toUInt64(ns[2]))/10 FROM (SELECT intDiv(number, 100) AS k, groupArray([toString(number), toString(number*10)]) AS ns FROM test.numbers_mt GROUP BY k) ARRAY JOIN ns;
-SELECT count(), sum(ns[1]), max(ns[1]), sum(ns[2])/10 FROM (SELECT intDiv(number, 100) AS k, groupArray([number, number*10]) AS ns FROM test.numbers_mt GROUP BY k) ARRAY JOIN ns;
-
-SELECT count(), sum(ns), max(ns) FROM (SELECT intDiv(number, 100) AS k, groupArray(number) AS ns FROM remote('127.0.0.{1,2}', 'test', 'numbers_mt') GROUP BY k) ARRAY JOIN ns;
-SELECT count(), sum(toUInt64(ns)), max(toUInt64(ns)) FROM (SELECT intDiv(number, 100) AS k, groupArray(toString(number)) AS ns FROM remote('127.0.0.{1,2}', 'test', 'numbers_mt') GROUP BY k) ARRAY JOIN ns;
-SELECT count(), sum(toUInt64(ns[1])), max(toUInt64(ns[1])), sum(toUInt64(ns[2]))/10 FROM (SELECT intDiv(number, 100) AS k, groupArray([toString(number), toString(number*10)]) AS ns FROM remote('127.0.0.{1,2}', 'test', 'numbers_mt') GROUP BY k) ARRAY JOIN ns;
-
-DROP TABLE test.numbers_mt;
-CREATE TABLE test.numbers_mt (number UInt64) ENGINE = Log;
-INSERT INTO test.numbers_mt SELECT * FROM system.numbers LIMIT 1, 1048575;
-
-SELECT '';
-SELECT roundToExp2(number) AS k, length(groupArray(1)(number AS i)), length(groupArray(1024)(i)), length(groupArray(65536)(i)) AS s FROM test.numbers_mt GROUP BY k ORDER BY k LIMIT 9, 11;
-SELECT roundToExp2(number) AS k, length(groupArray(1)(hex(number) AS i)), length(groupArray(1024)(i)), length(groupArray(65536)(i)) AS s FROM test.numbers_mt GROUP BY k ORDER BY k LIMIT 9, 11;
-SELECT roundToExp2(number) AS k, length(groupArray(1)([hex(number)] AS i)), length(groupArray(1024)(i)), length(groupArray(65536)(i)) AS s FROM test.numbers_mt GROUP BY k ORDER BY k LIMIT 9, 11;
-
-SELECT '';
-SELECT roundToExp2(number) AS k, length(groupArray(1)(number AS i)), length(groupArray(1500)(i)), length(groupArray(70000)(i)) AS s FROM remote('127.0.0.{1,2}', 'test', 'numbers_mt') GROUP BY k ORDER BY k LIMIT 9, 11;
-SELECT roundToExp2(number) AS k, length(groupArray(1)(hex(number) AS i)), length(groupArray(1500)(i)), length(groupArray(70000)(i)) AS s FROM remote('127.0.0.{1,2}', 'test', 'numbers_mt') GROUP BY k ORDER BY k LIMIT 9, 11;
-SELECT roundToExp2(number) AS k, length(groupArray(1)([hex(number)] AS i)), length(groupArray(1500)(i)), length(groupArray(70000)(i)) AS s FROM remote('127.0.0.{1,2}', 'test', 'numbers_mt') GROUP BY k ORDER BY k LIMIT 9, 11;
-
-DROP TABLE test.numbers_mt;
-
--- Check binary compability:
--- clickhouse-client -h old -q "SELECT arrayReduce('groupArrayState', [['1'], ['22'], ['333']]) FORMAT RowBinary" | clickhouse-local --input-format RowBinary --structure "d AggregateFunction(groupArray2, Array(String))" -q "SELECT groupArray2Merge(d) FROM table"
--- /dev/null
+++ b/dbms/tests/queries/0_stateless/00113_shard_group_array.reference
@@ -0,0 +1,90 @@
+0	100
+1	100
+2	100
+3	100
+4	100
+5	100
+6	100
+7	100
+8	100
+9	100
+
+0	1000000
+
+21
+41
+1000000	500000500000	1000000
+1000000	500000500000	1000000
+1000000	500000500000	1000000	500000500000
+1000000	500000500000	1000000	500000500000
+2000000	1000001000000	1000000
+2000000	1000001000000	1000000
+2000000	1000001000000	1000000	1000001000000
+
+512	1	512	512
+1024	1	1024	1024
+2048	1	1024	2048
+4096	1	1024	4096
+8192	1	1024	8192
+16384	1	1024	16384
+32768	1	1024	32768
+65536	1	1024	65536
+131072	1	1024	65536
+262144	1	1024	65536
+524288	1	1024	65536
+512	1	512	512
+1024	1	1024	1024
+2048	1	1024	2048
+4096	1	1024	4096
+8192	1	1024	8192
+16384	1	1024	16384
+32768	1	1024	32768
+65536	1	1024	65536
+131072	1	1024	65536
+262144	1	1024	65536
+524288	1	1024	65536
+512	1	512	512
+1024	1	1024	1024
+2048	1	1024	2048
+4096	1	1024	4096
+8192	1	1024	8192
+16384	1	1024	16384
+32768	1	1024	32768
+65536	1	1024	65536
+131072	1	1024	65536
+262144	1	1024	65536
+524288	1	1024	65536
+
+512	1	1024	1024
+1024	1	1500	2048
+2048	1	1500	4096
+4096	1	1500	8192
+8192	1	1500	16384
+16384	1	1500	32768
+32768	1	1500	65536
+65536	1	1500	70000
+131072	1	1500	70000
+262144	1	1500	70000
+524288	1	1500	70000
+512	1	1024	1024
+1024	1	1500	2048
+2048	1	1500	4096
+4096	1	1500	8192
+8192	1	1500	16384
+16384	1	1500	32768
+32768	1	1500	65536
+65536	1	1500	70000
+131072	1	1500	70000
+262144	1	1500	70000
+524288	1	1500	70000
+512	1	1024	1024
+1024	1	1500	2048
+2048	1	1500	4096
+4096	1	1500	8192
+8192	1	1500	16384
+16384	1	1500	32768
+32768	1	1500	65536
+65536	1	1500	70000
+131072	1	1500	70000
+262144	1	1500	70000
+524288	1	1500	70000
--- /dev/null
+++ b/dbms/tests/queries/0_stateless/00113_shard_group_array.sql
@@ -0,0 +1,37 @@
+SELECT intDiv(number, 100) AS k, length(groupArray(number)) FROM (SELECT * FROM system.numbers LIMIT 1000000) GROUP BY k WITH TOTALS ORDER BY k LIMIT 10;
+
+SELECT '';
+SELECT length(toString(groupArrayState(toDate(number)))) FROM (SELECT * FROM system.numbers LIMIT 10);
+SELECT length(toString(groupArrayState(toDateTime(number)))) FROM (SELECT * FROM system.numbers LIMIT 10);
+
+DROP TABLE IF EXISTS test.numbers_mt;
+CREATE TABLE test.numbers_mt (number UInt64) ENGINE = Log;
+INSERT INTO test.numbers_mt SELECT * FROM system.numbers LIMIT 1, 1000000;
+
+SELECT count(), sum(ns), max(ns) FROM (SELECT intDiv(number, 100) AS k, groupArray(number) AS ns FROM test.numbers_mt GROUP BY k) ARRAY JOIN ns;
+SELECT count(), sum(toUInt64(ns)), max(toUInt64(ns)) FROM (SELECT intDiv(number, 100) AS k, groupArray(toString(number)) AS ns FROM test.numbers_mt GROUP BY k) ARRAY JOIN ns;
+SELECT count(), sum(toUInt64(ns[1])), max(toUInt64(ns[1])), sum(toUInt64(ns[2]))/10 FROM (SELECT intDiv(number, 100) AS k, groupArray([toString(number), toString(number*10)]) AS ns FROM test.numbers_mt GROUP BY k) ARRAY JOIN ns;
+SELECT count(), sum(ns[1]), max(ns[1]), sum(ns[2])/10 FROM (SELECT intDiv(number, 100) AS k, groupArray([number, number*10]) AS ns FROM test.numbers_mt GROUP BY k) ARRAY JOIN ns;
+
+SELECT count(), sum(ns), max(ns) FROM (SELECT intDiv(number, 100) AS k, groupArray(number) AS ns FROM remote('127.0.0.{1,2}', 'test', 'numbers_mt') GROUP BY k) ARRAY JOIN ns;
+SELECT count(), sum(toUInt64(ns)), max(toUInt64(ns)) FROM (SELECT intDiv(number, 100) AS k, groupArray(toString(number)) AS ns FROM remote('127.0.0.{1,2}', 'test', 'numbers_mt') GROUP BY k) ARRAY JOIN ns;
+SELECT count(), sum(toUInt64(ns[1])), max(toUInt64(ns[1])), sum(toUInt64(ns[2]))/10 FROM (SELECT intDiv(number, 100) AS k, groupArray([toString(number), toString(number*10)]) AS ns FROM remote('127.0.0.{1,2}', 'test', 'numbers_mt') GROUP BY k) ARRAY JOIN ns;
+
+DROP TABLE test.numbers_mt;
+CREATE TABLE test.numbers_mt (number UInt64) ENGINE = Log;
+INSERT INTO test.numbers_mt SELECT * FROM system.numbers LIMIT 1, 1048575;
+
+SELECT '';
+SELECT roundToExp2(number) AS k, length(groupArray(1)(number AS i)), length(groupArray(1024)(i)), length(groupArray(65536)(i)) AS s FROM test.numbers_mt GROUP BY k ORDER BY k LIMIT 9, 11;
+SELECT roundToExp2(number) AS k, length(groupArray(1)(hex(number) AS i)), length(groupArray(1024)(i)), length(groupArray(65536)(i)) AS s FROM test.numbers_mt GROUP BY k ORDER BY k LIMIT 9, 11;
+SELECT roundToExp2(number) AS k, length(groupArray(1)([hex(number)] AS i)), length(groupArray(1024)(i)), length(groupArray(65536)(i)) AS s FROM test.numbers_mt GROUP BY k ORDER BY k LIMIT 9, 11;
+
+SELECT '';
+SELECT roundToExp2(number) AS k, length(groupArray(1)(number AS i)), length(groupArray(1500)(i)), length(groupArray(70000)(i)) AS s FROM remote('127.0.0.{1,2}', 'test', 'numbers_mt') GROUP BY k ORDER BY k LIMIT 9, 11;
+SELECT roundToExp2(number) AS k, length(groupArray(1)(hex(number) AS i)), length(groupArray(1500)(i)), length(groupArray(70000)(i)) AS s FROM remote('127.0.0.{1,2}', 'test', 'numbers_mt') GROUP BY k ORDER BY k LIMIT 9, 11;
+SELECT roundToExp2(number) AS k, length(groupArray(1)([hex(number)] AS i)), length(groupArray(1500)(i)), length(groupArray(70000)(i)) AS s FROM remote('127.0.0.{1,2}', 'test', 'numbers_mt') GROUP BY k ORDER BY k LIMIT 9, 11;
+
+DROP TABLE test.numbers_mt;
+
+-- Check binary compability:
+-- clickhouse-client -h old -q "SELECT arrayReduce('groupArrayState', [['1'], ['22'], ['333']]) FORMAT RowBinary" | clickhouse-local --input-format RowBinary --structure "d AggregateFunction(groupArray2, Array(String))" -q "SELECT groupArray2Merge(d) FROM table"
